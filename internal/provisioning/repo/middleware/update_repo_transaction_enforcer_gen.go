// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/transaction/transaction_enforcer.gotmpl

package middleware

import (
	"context"
	"io"

	"github.com/FuturFusion/operations-center/internal/provisioning"
	"github.com/FuturFusion/operations-center/internal/transaction"
)

// UpdateRepoWithTransactionEnforcer implements provisioning.UpdateRepo that enforces a transaction.
type UpdateRepoWithTransactionEnforcer struct {
	_base provisioning.UpdateRepo
}

// NewUpdateRepoWithTransactionEnforcer instruments an implementation of the provisioning.UpdateRepo with simple logging.
func NewUpdateRepoWithTransactionEnforcer(base provisioning.UpdateRepo) UpdateRepoWithTransactionEnforcer {
	return UpdateRepoWithTransactionEnforcer{
		_base: base,
	}
}

// GetAll implements provisioning.UpdateRepo.
func (_d UpdateRepoWithTransactionEnforcer) GetAll(ctx context.Context) (updates provisioning.Updates, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		updates, err = _d._base.GetAll(ctx)
		return err
	})

	return updates, err
}

// GetAllIDs implements provisioning.UpdateRepo.
func (_d UpdateRepoWithTransactionEnforcer) GetAllIDs(ctx context.Context) (strings []string, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		strings, err = _d._base.GetAllIDs(ctx)
		return err
	})

	return strings, err
}

// GetByID implements provisioning.UpdateRepo.
func (_d UpdateRepoWithTransactionEnforcer) GetByID(ctx context.Context, id string) (update provisioning.Update, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		update, err = _d._base.GetByID(ctx, id)
		return err
	})

	return update, err
}

// GetUpdateAllFiles implements provisioning.UpdateRepo.
func (_d UpdateRepoWithTransactionEnforcer) GetUpdateAllFiles(ctx context.Context, updateID string) (updateFiles provisioning.UpdateFiles, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		updateFiles, err = _d._base.GetUpdateAllFiles(ctx, updateID)
		return err
	})

	return updateFiles, err
}

// GetUpdateFileByFilename implements provisioning.UpdateRepo.
func (_d UpdateRepoWithTransactionEnforcer) GetUpdateFileByFilename(ctx context.Context, updateID string, filename string) (readCloser io.ReadCloser, n int, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		readCloser, n, err = _d._base.GetUpdateFileByFilename(ctx, updateID, filename)
		return err
	})

	return readCloser, n, err
}
