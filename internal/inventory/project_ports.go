// Code generated by generate-inventory; DO NOT EDIT.

package inventory

import (
	"context"

	incusapi "github.com/lxc/incus/v6/shared/api"
)

//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i ProjectService -t ../logger/slog.gotmpl -o ./middleware/project_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i ProjectService -t prometheus -o ./middleware/project_prometheus_gen.go

type ProjectService interface {
	GetAllIDsWithFilter(ctx context.Context, filter ProjectFilter) ([]int, error)
	GetByID(ctx context.Context, id int) (Project, error)
	ResyncByID(ctx context.Context, id int) error
	SyncAll(ctx context.Context) error
	SyncCluster(ctx context.Context, clusterID int) error
	SyncServer(ctx context.Context, serverID int) error
}

//go:generate go run github.com/matryer/moq -fmt goimports -pkg mock -out ./repo/mock/project_repo_mock_gen.go -rm . ProjectRepo
//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i ProjectRepo -t ../logger/slog.gotmpl -o ./repo/middleware/project_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i ProjectRepo -t prometheus -o ./repo/middleware/project_prometheus_gen.go

type ProjectRepo interface {
	GetAllIDsWithFilter(ctx context.Context, filter ProjectFilter) ([]int, error)
	GetByID(ctx context.Context, id int) (Project, error)
	Create(ctx context.Context, project Project) (Project, error)
	DeleteByID(ctx context.Context, id int) error
	DeleteByServerID(ctx context.Context, serverID int) error
	UpdateByID(ctx context.Context, project Project) (Project, error)
}

//go:generate go run github.com/matryer/moq -fmt goimports -pkg mock -out ./server/mock/project_server_client_mock_gen.go -rm . ProjectServerClient
//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i ProjectServerClient -t ../logger/slog.gotmpl -o ./server/middleware/project_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i ProjectServerClient -t prometheus -o ./server/middleware/project_prometheus_gen.go

type ProjectServerClient interface {
	GetProjects(ctx context.Context, connectionURL string) ([]incusapi.Project, error)
	GetProjectByName(ctx context.Context, connectionURL string, projectName string) (incusapi.Project, error)
}
