// Code generated by generate-inventory; DO NOT EDIT.

package inventory

import (
	"context"

	"github.com/google/uuid"

	incusapi "github.com/lxc/incus/v6/shared/api"
)

type ImageService interface {
	GetAllWithFilter(ctx context.Context, filter ImageFilter) (Images, error)
	GetAllUUIDsWithFilter(ctx context.Context, filter ImageFilter) ([]uuid.UUID, error)
	GetByUUID(ctx context.Context, id uuid.UUID) (Image, error)
	ResyncByUUID(ctx context.Context, id uuid.UUID) error
	SyncCluster(ctx context.Context, cluster string) error
}

type ImageRepo interface {
	GetAllWithFilter(ctx context.Context, filter ImageFilter) (Images, error)
	GetAllUUIDsWithFilter(ctx context.Context, filter ImageFilter) ([]uuid.UUID, error)
	GetByUUID(ctx context.Context, id uuid.UUID) (Image, error)
	Create(ctx context.Context, image Image) (Image, error)
	DeleteByUUID(ctx context.Context, id uuid.UUID) error
	DeleteByClusterName(ctx context.Context, cluster string) error
	UpdateByUUID(ctx context.Context, image Image) (Image, error)
}

type ImageServerClient interface {
	GetImages(ctx context.Context, connectionURL string) ([]incusapi.Image, error)
	GetImageByName(ctx context.Context, connectionURL string, imageName string) (incusapi.Image, error)
}
