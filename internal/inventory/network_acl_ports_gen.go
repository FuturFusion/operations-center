// Code generated by generate-inventory; DO NOT EDIT.

package inventory

import (
	"context"

	"github.com/google/uuid"
	incusapi "github.com/lxc/incus/v6/shared/api"

	"github.com/FuturFusion/operations-center/internal/domain"
	"github.com/FuturFusion/operations-center/internal/provisioning"
)

type NetworkACLService interface {
	GetAllWithFilter(ctx context.Context, filter NetworkACLFilter) (NetworkACLs, error)
	GetAllUUIDsWithFilter(ctx context.Context, filter NetworkACLFilter) ([]uuid.UUID, error)
	GetByUUID(ctx context.Context, id uuid.UUID) (NetworkACL, error)
	ResyncByUUID(ctx context.Context, id uuid.UUID) error
	ResyncByName(ctx context.Context, clusterName string, event domain.LifecycleEvent) error
	SyncCluster(ctx context.Context, cluster string) error
}

type NetworkACLRepo interface {
	GetAllWithFilter(ctx context.Context, filter NetworkACLFilter) (NetworkACLs, error)
	GetAllUUIDsWithFilter(ctx context.Context, filter NetworkACLFilter) ([]uuid.UUID, error)
	GetByUUID(ctx context.Context, id uuid.UUID) (NetworkACL, error)
	Create(ctx context.Context, networkACL NetworkACL) (NetworkACL, error)
	DeleteByUUID(ctx context.Context, id uuid.UUID) error
	DeleteByClusterName(ctx context.Context, cluster string) error
	UpdateByUUID(ctx context.Context, networkACL NetworkACL) (NetworkACL, error)
}

type NetworkACLServerClient interface {
	GetNetworkACLs(ctx context.Context, endpoint provisioning.Endpoint) ([]incusapi.NetworkACL, error)
	GetNetworkACLByName(ctx context.Context, endpoint provisioning.Endpoint, projectName string, networkACLName string) (incusapi.NetworkACL, error)
}
