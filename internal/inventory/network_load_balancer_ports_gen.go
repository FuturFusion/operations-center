// Code generated by generate-inventory; DO NOT EDIT.

package inventory

import (
	"context"

	"github.com/google/uuid"
	incusapi "github.com/lxc/incus/v6/shared/api"

	"github.com/FuturFusion/operations-center/internal/provisioning"
)

type NetworkLoadBalancerService interface {
	GetAllWithFilter(ctx context.Context, filter NetworkLoadBalancerFilter) (NetworkLoadBalancers, error)
	GetAllUUIDsWithFilter(ctx context.Context, filter NetworkLoadBalancerFilter) ([]uuid.UUID, error)
	GetByUUID(ctx context.Context, id uuid.UUID) (NetworkLoadBalancer, error)
	ResyncByUUID(ctx context.Context, id uuid.UUID) error
	SyncCluster(ctx context.Context, cluster string) error
}

type NetworkLoadBalancerRepo interface {
	GetAllWithFilter(ctx context.Context, filter NetworkLoadBalancerFilter) (NetworkLoadBalancers, error)
	GetAllUUIDsWithFilter(ctx context.Context, filter NetworkLoadBalancerFilter) ([]uuid.UUID, error)
	GetByUUID(ctx context.Context, id uuid.UUID) (NetworkLoadBalancer, error)
	Create(ctx context.Context, networkLoadBalancer NetworkLoadBalancer) (NetworkLoadBalancer, error)
	DeleteByUUID(ctx context.Context, id uuid.UUID) error
	DeleteByClusterName(ctx context.Context, cluster string) error
	UpdateByUUID(ctx context.Context, networkLoadBalancer NetworkLoadBalancer) (NetworkLoadBalancer, error)
}

type NetworkLoadBalancerServerClient interface {
	GetNetworkLoadBalancers(ctx context.Context, endpoint provisioning.Endpoint, networkName string) ([]incusapi.NetworkLoadBalancer, error)
	GetNetworkLoadBalancerByName(ctx context.Context, endpoint provisioning.Endpoint, networkName string, networkLoadBalancerName string) (incusapi.NetworkLoadBalancer, error)
}
