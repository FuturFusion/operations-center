// Code generated by mockery; DO NOT EDIT.
// github.com/vektra/mockery
// template: matryer

package mock

import (
	"context"
	"sync"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/lxc/incus/v6/shared/api"
)

// Ensure that NetworkIntegrationServerClientMock does implement inventory.NetworkIntegrationServerClient.
// If this is not the case, regenerate this file with moq.
var _ inventory.NetworkIntegrationServerClient = &NetworkIntegrationServerClientMock{}

// NetworkIntegrationServerClientMock is a mock implementation of inventory.NetworkIntegrationServerClient.
//
//	func TestSomethingThatUsesNetworkIntegrationServerClient(t *testing.T) {
//
//		// make and configure a mocked inventory.NetworkIntegrationServerClient
//		mockedNetworkIntegrationServerClient := &NetworkIntegrationServerClientMock{
//			GetNetworkIntegrationByNameFunc: func(ctx context.Context, connectionURL string, networkIntegrationName string) (api.NetworkIntegration, error) {
//				panic("mock out the GetNetworkIntegrationByName method")
//			},
//			GetNetworkIntegrationsFunc: func(ctx context.Context, connectionURL string) ([]api.NetworkIntegration, error) {
//				panic("mock out the GetNetworkIntegrations method")
//			},
//		}
//
//		// use mockedNetworkIntegrationServerClient in code that requires inventory.NetworkIntegrationServerClient
//		// and then make assertions.
//
//	}
type NetworkIntegrationServerClientMock struct {
	// GetNetworkIntegrationByNameFunc mocks the GetNetworkIntegrationByName method.
	GetNetworkIntegrationByNameFunc func(ctx context.Context, connectionURL string, networkIntegrationName string) (api.NetworkIntegration, error)

	// GetNetworkIntegrationsFunc mocks the GetNetworkIntegrations method.
	GetNetworkIntegrationsFunc func(ctx context.Context, connectionURL string) ([]api.NetworkIntegration, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetNetworkIntegrationByName holds details about calls to the GetNetworkIntegrationByName method.
		GetNetworkIntegrationByName []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ConnectionURL is the connectionURL argument value.
			ConnectionURL string
			// NetworkIntegrationName is the networkIntegrationName argument value.
			NetworkIntegrationName string
		}
		// GetNetworkIntegrations holds details about calls to the GetNetworkIntegrations method.
		GetNetworkIntegrations []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ConnectionURL is the connectionURL argument value.
			ConnectionURL string
		}
	}
	lockGetNetworkIntegrationByName sync.RWMutex
	lockGetNetworkIntegrations      sync.RWMutex
}

// GetNetworkIntegrationByName calls GetNetworkIntegrationByNameFunc.
func (mock *NetworkIntegrationServerClientMock) GetNetworkIntegrationByName(ctx context.Context, connectionURL string, networkIntegrationName string) (api.NetworkIntegration, error) {
	if mock.GetNetworkIntegrationByNameFunc == nil {
		panic("NetworkIntegrationServerClientMock.GetNetworkIntegrationByNameFunc: method is nil but NetworkIntegrationServerClient.GetNetworkIntegrationByName was just called")
	}
	callInfo := struct {
		Ctx                    context.Context
		ConnectionURL          string
		NetworkIntegrationName string
	}{
		Ctx:                    ctx,
		ConnectionURL:          connectionURL,
		NetworkIntegrationName: networkIntegrationName,
	}
	mock.lockGetNetworkIntegrationByName.Lock()
	mock.calls.GetNetworkIntegrationByName = append(mock.calls.GetNetworkIntegrationByName, callInfo)
	mock.lockGetNetworkIntegrationByName.Unlock()
	return mock.GetNetworkIntegrationByNameFunc(ctx, connectionURL, networkIntegrationName)
}

// GetNetworkIntegrationByNameCalls gets all the calls that were made to GetNetworkIntegrationByName.
// Check the length with:
//
//	len(mockedNetworkIntegrationServerClient.GetNetworkIntegrationByNameCalls())
func (mock *NetworkIntegrationServerClientMock) GetNetworkIntegrationByNameCalls() []struct {
	Ctx                    context.Context
	ConnectionURL          string
	NetworkIntegrationName string
} {
	var calls []struct {
		Ctx                    context.Context
		ConnectionURL          string
		NetworkIntegrationName string
	}
	mock.lockGetNetworkIntegrationByName.RLock()
	calls = mock.calls.GetNetworkIntegrationByName
	mock.lockGetNetworkIntegrationByName.RUnlock()
	return calls
}

// GetNetworkIntegrations calls GetNetworkIntegrationsFunc.
func (mock *NetworkIntegrationServerClientMock) GetNetworkIntegrations(ctx context.Context, connectionURL string) ([]api.NetworkIntegration, error) {
	if mock.GetNetworkIntegrationsFunc == nil {
		panic("NetworkIntegrationServerClientMock.GetNetworkIntegrationsFunc: method is nil but NetworkIntegrationServerClient.GetNetworkIntegrations was just called")
	}
	callInfo := struct {
		Ctx           context.Context
		ConnectionURL string
	}{
		Ctx:           ctx,
		ConnectionURL: connectionURL,
	}
	mock.lockGetNetworkIntegrations.Lock()
	mock.calls.GetNetworkIntegrations = append(mock.calls.GetNetworkIntegrations, callInfo)
	mock.lockGetNetworkIntegrations.Unlock()
	return mock.GetNetworkIntegrationsFunc(ctx, connectionURL)
}

// GetNetworkIntegrationsCalls gets all the calls that were made to GetNetworkIntegrations.
// Check the length with:
//
//	len(mockedNetworkIntegrationServerClient.GetNetworkIntegrationsCalls())
func (mock *NetworkIntegrationServerClientMock) GetNetworkIntegrationsCalls() []struct {
	Ctx           context.Context
	ConnectionURL string
} {
	var calls []struct {
		Ctx           context.Context
		ConnectionURL string
	}
	mock.lockGetNetworkIntegrations.RLock()
	calls = mock.calls.GetNetworkIntegrations
	mock.lockGetNetworkIntegrations.RUnlock()
	return calls
}
