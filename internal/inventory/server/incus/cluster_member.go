// Code generated by generate-inventory; DO NOT EDIT.

package incus

import (
	"context"
	"net/http"

	incusapi "github.com/lxc/incus/v6/shared/api"

	"github.com/FuturFusion/operations-center/internal/domain"
)

func (s serverClient) GetClusterMembers(ctx context.Context, connectionURL string) ([]incusapi.ClusterMember, error) {
	client, err := s.getClient(ctx, connectionURL)
	if err != nil {
		return nil, err
	}

	serverClusterMembers, err := client.GetClusterMembers()
	if incusapi.StatusErrorCheck(err, http.StatusInternalServerError) && err.Error() == "Server is not clustered" {
		return nil, nil
	}

	if err != nil {
		return nil, err
	}

	return serverClusterMembers, nil
}

func (s serverClient) GetClusterMemberByName(ctx context.Context, connectionURL string, clusterMemberName string) (incusapi.ClusterMember, error) {
	client, err := s.getClient(ctx, connectionURL)
	if err != nil {
		return incusapi.ClusterMember{}, err
	}

	serverClusterMember, _, err := client.GetClusterMember(clusterMemberName)
	if incusapi.StatusErrorCheck(err, http.StatusNotFound) {
		return incusapi.ClusterMember{}, domain.ErrNotFound
	}

	if err != nil {
		return incusapi.ClusterMember{}, err
	}

	return *serverClusterMember, nil
}
