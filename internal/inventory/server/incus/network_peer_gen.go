// Code generated by generate-inventory; DO NOT EDIT.

package incus

import (
	"context"
	"net/http"

	incusapi "github.com/lxc/incus/v6/shared/api"

	"github.com/FuturFusion/operations-center/internal/domain"
	"github.com/FuturFusion/operations-center/internal/provisioning"
)

func (s serverClient) GetNetworkPeers(ctx context.Context, cluster provisioning.Cluster, networkPeerName string) ([]incusapi.NetworkPeer, error) {
	client, err := s.getClient(ctx, cluster)
	if err != nil {
		return nil, err
	}

	serverNetworkPeers, err := client.GetNetworkPeers(networkPeerName)
	if err != nil {
		return nil, err
	}

	return serverNetworkPeers, nil
}

func (s serverClient) GetNetworkPeerByName(ctx context.Context, cluster provisioning.Cluster, networkName string, networkPeerName string) (incusapi.NetworkPeer, error) {
	client, err := s.getClient(ctx, cluster)
	if err != nil {
		return incusapi.NetworkPeer{}, err
	}

	serverNetworkPeer, _, err := client.GetNetworkPeer(networkName, networkPeerName)
	if incusapi.StatusErrorCheck(err, http.StatusNotFound) {
		return incusapi.NetworkPeer{}, domain.ErrNotFound
	}

	if err != nil {
		return incusapi.NetworkPeer{}, err
	}

	return *serverNetworkPeer, nil
}
