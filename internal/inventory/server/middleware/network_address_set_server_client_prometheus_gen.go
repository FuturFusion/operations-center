// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/metrics/prometheus.gotmpl

package middleware

import (
	"context"
	"time"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/provisioning"
	"github.com/lxc/incus/v6/shared/api"
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

// NetworkAddressSetServerClientWithPrometheus implements inventory.NetworkAddressSetServerClient interface with all methods wrapped
// with Prometheus metrics.
type NetworkAddressSetServerClientWithPrometheus struct {
	base         inventory.NetworkAddressSetServerClient
	instanceName string
}

var networkAddressSetServerClientDurationSummaryVec = promauto.NewSummaryVec(
	prometheus.SummaryOpts{
		Name:       "network_address_set_server_client_duration_seconds",
		Help:       "networkAddressSetServerClient runtime duration and result",
		MaxAge:     time.Minute,
		Objectives: map[float64]float64{0.5: 0.05, 0.9: 0.01, 0.99: 0.001},
	},
	[]string{"instance_name", "method", "result"},
)

// NewNetworkAddressSetServerClientWithPrometheus returns an instance of the inventory.NetworkAddressSetServerClient decorated with prometheus summary metric.
func NewNetworkAddressSetServerClientWithPrometheus(base inventory.NetworkAddressSetServerClient, instanceName string) NetworkAddressSetServerClientWithPrometheus {
	return NetworkAddressSetServerClientWithPrometheus{
		base:         base,
		instanceName: instanceName,
	}
}

// GetNetworkAddressSetByName implements inventory.NetworkAddressSetServerClient.
func (_d NetworkAddressSetServerClientWithPrometheus) GetNetworkAddressSetByName(ctx context.Context, cluster provisioning.Cluster, networkAddressSetName string) (networkAddressSet api.NetworkAddressSet, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkAddressSetServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkAddressSetByName", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkAddressSetByName(ctx, cluster, networkAddressSetName)
}

// GetNetworkAddressSets implements inventory.NetworkAddressSetServerClient.
func (_d NetworkAddressSetServerClientWithPrometheus) GetNetworkAddressSets(ctx context.Context, cluster provisioning.Cluster) (networkAddressSets []api.NetworkAddressSet, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkAddressSetServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkAddressSets", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkAddressSets(ctx, cluster)
}

// HasExtension implements inventory.NetworkAddressSetServerClient.
func (_d NetworkAddressSetServerClientWithPrometheus) HasExtension(ctx context.Context, cluster provisioning.Cluster, extension string) (exists bool) {
	_since := time.Now()
	defer func() {
		result := "ok"
		networkAddressSetServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "HasExtension", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.HasExtension(ctx, cluster, extension)
}
