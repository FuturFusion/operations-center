// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/metrics/prometheus.gotmpl

package middleware

import (
	"context"
	"time"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/lxc/incus/v6/shared/api"
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

// NetworkForwardServerClientWithPrometheus implements inventory.NetworkForwardServerClient interface with all methods wrapped
// with Prometheus metrics.
type NetworkForwardServerClientWithPrometheus struct {
	base         inventory.NetworkForwardServerClient
	instanceName string
}

var networkForwardServerClientDurationSummaryVec = promauto.NewSummaryVec(
	prometheus.SummaryOpts{
		Name:       "network_forward_server_client_duration_seconds",
		Help:       "networkForwardServerClient runtime duration and result",
		MaxAge:     time.Minute,
		Objectives: map[float64]float64{0.5: 0.05, 0.9: 0.01, 0.99: 0.001},
	},
	[]string{"instance_name", "method", "result"},
)

// NewNetworkForwardServerClientWithPrometheus returns an instance of the inventory.NetworkForwardServerClient decorated with prometheus summary metric.
func NewNetworkForwardServerClientWithPrometheus(base inventory.NetworkForwardServerClient, instanceName string) NetworkForwardServerClientWithPrometheus {
	return NetworkForwardServerClientWithPrometheus{
		base:         base,
		instanceName: instanceName,
	}
}

// GetNetworkForwardByName implements inventory.NetworkForwardServerClient.
func (_d NetworkForwardServerClientWithPrometheus) GetNetworkForwardByName(ctx context.Context, connectionURL string, networkName string, networkForwardName string) (networkForward api.NetworkForward, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkForwardServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkForwardByName", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkForwardByName(ctx, connectionURL, networkName, networkForwardName)
}

// GetNetworkForwards implements inventory.NetworkForwardServerClient.
func (_d NetworkForwardServerClientWithPrometheus) GetNetworkForwards(ctx context.Context, connectionURL string, networkName string) (networkForwards []api.NetworkForward, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkForwardServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkForwards", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkForwards(ctx, connectionURL, networkName)
}
