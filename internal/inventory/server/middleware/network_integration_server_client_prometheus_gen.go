// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/metrics/prometheus.gotmpl

package middleware

import (
	"context"
	"time"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/provisioning"
	"github.com/lxc/incus/v6/shared/api"
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

// NetworkIntegrationServerClientWithPrometheus implements inventory.NetworkIntegrationServerClient interface with all methods wrapped
// with Prometheus metrics.
type NetworkIntegrationServerClientWithPrometheus struct {
	base         inventory.NetworkIntegrationServerClient
	instanceName string
}

var networkIntegrationServerClientDurationSummaryVec = promauto.NewSummaryVec(
	prometheus.SummaryOpts{
		Name:       "network_integration_server_client_duration_seconds",
		Help:       "networkIntegrationServerClient runtime duration and result",
		MaxAge:     time.Minute,
		Objectives: map[float64]float64{0.5: 0.05, 0.9: 0.01, 0.99: 0.001},
	},
	[]string{"instance_name", "method", "result"},
)

// NewNetworkIntegrationServerClientWithPrometheus returns an instance of the inventory.NetworkIntegrationServerClient decorated with prometheus summary metric.
func NewNetworkIntegrationServerClientWithPrometheus(base inventory.NetworkIntegrationServerClient, instanceName string) NetworkIntegrationServerClientWithPrometheus {
	return NetworkIntegrationServerClientWithPrometheus{
		base:         base,
		instanceName: instanceName,
	}
}

// GetNetworkIntegrationByName implements inventory.NetworkIntegrationServerClient.
func (_d NetworkIntegrationServerClientWithPrometheus) GetNetworkIntegrationByName(ctx context.Context, endpoint provisioning.Endpoint, networkIntegrationName string) (networkIntegration api.NetworkIntegration, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkIntegrationServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkIntegrationByName", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkIntegrationByName(ctx, endpoint, networkIntegrationName)
}

// GetNetworkIntegrations implements inventory.NetworkIntegrationServerClient.
func (_d NetworkIntegrationServerClientWithPrometheus) GetNetworkIntegrations(ctx context.Context, endpoint provisioning.Endpoint) (networkIntegrations []api.NetworkIntegration, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkIntegrationServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkIntegrations", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkIntegrations(ctx, endpoint)
}
