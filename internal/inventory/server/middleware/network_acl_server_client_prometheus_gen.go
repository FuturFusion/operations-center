// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/metrics/prometheus.gotmpl

package middleware

import (
	"context"
	"time"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/provisioning"
	"github.com/lxc/incus/v6/shared/api"
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

// NetworkACLServerClientWithPrometheus implements inventory.NetworkACLServerClient interface with all methods wrapped
// with Prometheus metrics.
type NetworkACLServerClientWithPrometheus struct {
	base         inventory.NetworkACLServerClient
	instanceName string
}

var networkACLServerClientDurationSummaryVec = promauto.NewSummaryVec(
	prometheus.SummaryOpts{
		Name:       "network_acl_server_client_duration_seconds",
		Help:       "networkACLServerClient runtime duration and result",
		MaxAge:     time.Minute,
		Objectives: map[float64]float64{0.5: 0.05, 0.9: 0.01, 0.99: 0.001},
	},
	[]string{"instance_name", "method", "result"},
)

// NewNetworkACLServerClientWithPrometheus returns an instance of the inventory.NetworkACLServerClient decorated with prometheus summary metric.
func NewNetworkACLServerClientWithPrometheus(base inventory.NetworkACLServerClient, instanceName string) NetworkACLServerClientWithPrometheus {
	return NetworkACLServerClientWithPrometheus{
		base:         base,
		instanceName: instanceName,
	}
}

// GetNetworkACLByName implements inventory.NetworkACLServerClient.
func (_d NetworkACLServerClientWithPrometheus) GetNetworkACLByName(ctx context.Context, endpoint provisioning.Endpoint, networkACLName string) (networkACL api.NetworkACL, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkACLServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkACLByName", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkACLByName(ctx, endpoint, networkACLName)
}

// GetNetworkACLs implements inventory.NetworkACLServerClient.
func (_d NetworkACLServerClientWithPrometheus) GetNetworkACLs(ctx context.Context, endpoint provisioning.Endpoint) (networkACLs []api.NetworkACL, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		networkACLServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetNetworkACLs", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetNetworkACLs(ctx, endpoint)
}
