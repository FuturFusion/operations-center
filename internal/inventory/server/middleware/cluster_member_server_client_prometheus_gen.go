// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/metrics/prometheus.gotmpl

package middleware

import (
	"context"
	"time"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/lxc/incus/v6/shared/api"
	"github.com/prometheus/client_golang/prometheus"
	"github.com/prometheus/client_golang/prometheus/promauto"
)

// ClusterMemberServerClientWithPrometheus implements inventory.ClusterMemberServerClient interface with all methods wrapped
// with Prometheus metrics.
type ClusterMemberServerClientWithPrometheus struct {
	base         inventory.ClusterMemberServerClient
	instanceName string
}

var clusterMemberServerClientDurationSummaryVec = promauto.NewSummaryVec(
	prometheus.SummaryOpts{
		Name:       "cluster_member_server_client_duration_seconds",
		Help:       "clusterMemberServerClient runtime duration and result",
		MaxAge:     time.Minute,
		Objectives: map[float64]float64{0.5: 0.05, 0.9: 0.01, 0.99: 0.001},
	},
	[]string{"instance_name", "method", "result"},
)

// NewClusterMemberServerClientWithPrometheus returns an instance of the inventory.ClusterMemberServerClient decorated with prometheus summary metric.
func NewClusterMemberServerClientWithPrometheus(base inventory.ClusterMemberServerClient, instanceName string) ClusterMemberServerClientWithPrometheus {
	return ClusterMemberServerClientWithPrometheus{
		base:         base,
		instanceName: instanceName,
	}
}

// GetClusterMemberByName implements inventory.ClusterMemberServerClient.
func (_d ClusterMemberServerClientWithPrometheus) GetClusterMemberByName(ctx context.Context, connectionURL string, clusterMemberName string) (clusterMember api.ClusterMember, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		clusterMemberServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetClusterMemberByName", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetClusterMemberByName(ctx, connectionURL, clusterMemberName)
}

// GetClusterMembers implements inventory.ClusterMemberServerClient.
func (_d ClusterMemberServerClientWithPrometheus) GetClusterMembers(ctx context.Context, connectionURL string) (clusterMembers []api.ClusterMember, err error) {
	_since := time.Now()
	defer func() {
		result := "ok"
		if err != nil {
			result = "error"
		}

		clusterMemberServerClientDurationSummaryVec.WithLabelValues(_d.instanceName, "GetClusterMembers", result).Observe(time.Since(_since).Seconds())
	}()
	return _d.base.GetClusterMembers(ctx, connectionURL)
}
