// Code generated by generate-inventory; DO NOT EDIT.

package inventory

import (
	"context"

	incusapi "github.com/lxc/incus/v6/shared/api"
)

type NetworkZoneService interface {
	GetAllIDsWithFilter(ctx context.Context, filter NetworkZoneFilter) ([]int, error)
	GetByID(ctx context.Context, id int) (NetworkZone, error)
	SyncAll(ctx context.Context) error
	SyncCluster(ctx context.Context, clusterID int) error
	SyncServer(ctx context.Context, serverID int) error
}

//go:generate go run github.com/matryer/moq -fmt goimports -pkg mock -out repo/mock/network_zone_repo_mock_gen.go -rm . NetworkZoneRepo
//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i NetworkZoneRepo -t ../logger/slog.gotmpl -o ./repo/middleware/network_zone_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i NetworkZoneRepo -t prometheus -o ./repo/middleware/network_zone_prometheus_gen.go

type NetworkZoneRepo interface {
	GetAllIDsWithFilter(ctx context.Context, filter NetworkZoneFilter) ([]int, error)
	GetByID(ctx context.Context, id int) (NetworkZone, error)
	Create(ctx context.Context, networkZone NetworkZone) (NetworkZone, error)
	DeleteByServerID(ctx context.Context, serverID int) error
}

//go:generate go run github.com/matryer/moq -fmt goimports -pkg mock -out mock/network_zone_server_client_mock_gen.go -rm . NetworkZoneServerClient

type NetworkZoneServerClient interface {
	GetNetworkZones(ctx context.Context, connectionURL string) ([]incusapi.NetworkZone, error)
}
