// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/transaction/transaction_enforcer.gotmpl

package middleware

import (
	"context"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/transaction"
)

// NetworkPeerRepoWithTransactionEnforcer implements inventory.NetworkPeerRepo that enforces a transaction.
type NetworkPeerRepoWithTransactionEnforcer struct {
	_base inventory.NetworkPeerRepo
}

// NewNetworkPeerRepoWithTransactionEnforcer instruments an implementation of the inventory.NetworkPeerRepo with simple logging.
func NewNetworkPeerRepoWithTransactionEnforcer(base inventory.NetworkPeerRepo) NetworkPeerRepoWithTransactionEnforcer {
	return NetworkPeerRepoWithTransactionEnforcer{
		_base: base,
	}
}

// Create implements inventory.NetworkPeerRepo.
func (_d NetworkPeerRepoWithTransactionEnforcer) Create(ctx context.Context, networkPeer inventory.NetworkPeer) (networkPeer1 inventory.NetworkPeer, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkPeer1, err = _d._base.Create(ctx, networkPeer)
		return err
	})

	return networkPeer1, err
}

// DeleteByClusterName implements inventory.NetworkPeerRepo.
func (_d NetworkPeerRepoWithTransactionEnforcer) DeleteByClusterName(ctx context.Context, cluster string) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByClusterName(ctx, cluster)
		return err
	})

	return err
}

// DeleteByID implements inventory.NetworkPeerRepo.
func (_d NetworkPeerRepoWithTransactionEnforcer) DeleteByID(ctx context.Context, id int) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByID(ctx, id)
		return err
	})

	return err
}

// GetAllIDsWithFilter implements inventory.NetworkPeerRepo.
func (_d NetworkPeerRepoWithTransactionEnforcer) GetAllIDsWithFilter(ctx context.Context, filter inventory.NetworkPeerFilter) (ints []int, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		ints, err = _d._base.GetAllIDsWithFilter(ctx, filter)
		return err
	})

	return ints, err
}

// GetByID implements inventory.NetworkPeerRepo.
func (_d NetworkPeerRepoWithTransactionEnforcer) GetByID(ctx context.Context, id int) (networkPeer inventory.NetworkPeer, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkPeer, err = _d._base.GetByID(ctx, id)
		return err
	})

	return networkPeer, err
}

// UpdateByID implements inventory.NetworkPeerRepo.
func (_d NetworkPeerRepoWithTransactionEnforcer) UpdateByID(ctx context.Context, networkPeer inventory.NetworkPeer) (networkPeer1 inventory.NetworkPeer, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkPeer1, err = _d._base.UpdateByID(ctx, networkPeer)
		return err
	})

	return networkPeer1, err
}
