// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/transaction/transaction_enforcer.gotmpl

package middleware

import (
	"context"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/transaction"
)

// NetworkIntegrationRepoWithTransactionEnforcer implements inventory.NetworkIntegrationRepo that enforces a transaction.
type NetworkIntegrationRepoWithTransactionEnforcer struct {
	_base inventory.NetworkIntegrationRepo
}

// NewNetworkIntegrationRepoWithTransactionEnforcer instruments an implementation of the inventory.NetworkIntegrationRepo with simple logging.
func NewNetworkIntegrationRepoWithTransactionEnforcer(base inventory.NetworkIntegrationRepo) NetworkIntegrationRepoWithTransactionEnforcer {
	return NetworkIntegrationRepoWithTransactionEnforcer{
		_base: base,
	}
}

// Create implements inventory.NetworkIntegrationRepo.
func (_d NetworkIntegrationRepoWithTransactionEnforcer) Create(ctx context.Context, networkIntegration inventory.NetworkIntegration) (networkIntegration1 inventory.NetworkIntegration, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkIntegration1, err = _d._base.Create(ctx, networkIntegration)
		return err
	})

	return networkIntegration1, err
}

// DeleteByClusterName implements inventory.NetworkIntegrationRepo.
func (_d NetworkIntegrationRepoWithTransactionEnforcer) DeleteByClusterName(ctx context.Context, cluster string) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByClusterName(ctx, cluster)
		return err
	})

	return err
}

// DeleteByID implements inventory.NetworkIntegrationRepo.
func (_d NetworkIntegrationRepoWithTransactionEnforcer) DeleteByID(ctx context.Context, id int) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByID(ctx, id)
		return err
	})

	return err
}

// GetAllIDsWithFilter implements inventory.NetworkIntegrationRepo.
func (_d NetworkIntegrationRepoWithTransactionEnforcer) GetAllIDsWithFilter(ctx context.Context, filter inventory.NetworkIntegrationFilter) (ints []int, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		ints, err = _d._base.GetAllIDsWithFilter(ctx, filter)
		return err
	})

	return ints, err
}

// GetByID implements inventory.NetworkIntegrationRepo.
func (_d NetworkIntegrationRepoWithTransactionEnforcer) GetByID(ctx context.Context, id int) (networkIntegration inventory.NetworkIntegration, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkIntegration, err = _d._base.GetByID(ctx, id)
		return err
	})

	return networkIntegration, err
}

// UpdateByID implements inventory.NetworkIntegrationRepo.
func (_d NetworkIntegrationRepoWithTransactionEnforcer) UpdateByID(ctx context.Context, networkIntegration inventory.NetworkIntegration) (networkIntegration1 inventory.NetworkIntegration, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkIntegration1, err = _d._base.UpdateByID(ctx, networkIntegration)
		return err
	})

	return networkIntegration1, err
}
