// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/transaction/transaction_enforcer.gotmpl

package middleware

import (
	"context"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/transaction"
)

// NetworkZoneRepoWithTransactionEnforcer implements inventory.NetworkZoneRepo that enforces a transaction.
type NetworkZoneRepoWithTransactionEnforcer struct {
	_base inventory.NetworkZoneRepo
}

// NewNetworkZoneRepoWithTransactionEnforcer instruments an implementation of the inventory.NetworkZoneRepo with simple logging.
func NewNetworkZoneRepoWithTransactionEnforcer(base inventory.NetworkZoneRepo) NetworkZoneRepoWithTransactionEnforcer {
	return NetworkZoneRepoWithTransactionEnforcer{
		_base: base,
	}
}

// Create implements inventory.NetworkZoneRepo.
func (_d NetworkZoneRepoWithTransactionEnforcer) Create(ctx context.Context, networkZone inventory.NetworkZone) (networkZone1 inventory.NetworkZone, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkZone1, err = _d._base.Create(ctx, networkZone)
		return err
	})

	return networkZone1, err
}

// DeleteByClusterName implements inventory.NetworkZoneRepo.
func (_d NetworkZoneRepoWithTransactionEnforcer) DeleteByClusterName(ctx context.Context, cluster string) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByClusterName(ctx, cluster)
		return err
	})

	return err
}

// DeleteByID implements inventory.NetworkZoneRepo.
func (_d NetworkZoneRepoWithTransactionEnforcer) DeleteByID(ctx context.Context, id int) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByID(ctx, id)
		return err
	})

	return err
}

// GetAllIDsWithFilter implements inventory.NetworkZoneRepo.
func (_d NetworkZoneRepoWithTransactionEnforcer) GetAllIDsWithFilter(ctx context.Context, filter inventory.NetworkZoneFilter) (ints []int, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		ints, err = _d._base.GetAllIDsWithFilter(ctx, filter)
		return err
	})

	return ints, err
}

// GetByID implements inventory.NetworkZoneRepo.
func (_d NetworkZoneRepoWithTransactionEnforcer) GetByID(ctx context.Context, id int) (networkZone inventory.NetworkZone, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkZone, err = _d._base.GetByID(ctx, id)
		return err
	})

	return networkZone, err
}

// UpdateByID implements inventory.NetworkZoneRepo.
func (_d NetworkZoneRepoWithTransactionEnforcer) UpdateByID(ctx context.Context, networkZone inventory.NetworkZone) (networkZone1 inventory.NetworkZone, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		networkZone1, err = _d._base.UpdateByID(ctx, networkZone)
		return err
	})

	return networkZone1, err
}
