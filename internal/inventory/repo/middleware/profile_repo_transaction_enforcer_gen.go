// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/transaction/transaction_enforcer.gotmpl

package middleware

import (
	"context"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/transaction"
)

// ProfileRepoWithTransactionEnforcer implements inventory.ProfileRepo that enforces a transaction.
type ProfileRepoWithTransactionEnforcer struct {
	_base inventory.ProfileRepo
}

// NewProfileRepoWithTransactionEnforcer instruments an implementation of the inventory.ProfileRepo with simple logging.
func NewProfileRepoWithTransactionEnforcer(base inventory.ProfileRepo) ProfileRepoWithTransactionEnforcer {
	return ProfileRepoWithTransactionEnforcer{
		_base: base,
	}
}

// Create implements inventory.ProfileRepo.
func (_d ProfileRepoWithTransactionEnforcer) Create(ctx context.Context, profile inventory.Profile) (profile1 inventory.Profile, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		profile1, err = _d._base.Create(ctx, profile)
		return err
	})

	return profile1, err
}

// DeleteByClusterName implements inventory.ProfileRepo.
func (_d ProfileRepoWithTransactionEnforcer) DeleteByClusterName(ctx context.Context, cluster string) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByClusterName(ctx, cluster)
		return err
	})

	return err
}

// DeleteByID implements inventory.ProfileRepo.
func (_d ProfileRepoWithTransactionEnforcer) DeleteByID(ctx context.Context, id int) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByID(ctx, id)
		return err
	})

	return err
}

// GetAllIDsWithFilter implements inventory.ProfileRepo.
func (_d ProfileRepoWithTransactionEnforcer) GetAllIDsWithFilter(ctx context.Context, filter inventory.ProfileFilter) (ints []int, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		ints, err = _d._base.GetAllIDsWithFilter(ctx, filter)
		return err
	})

	return ints, err
}

// GetByID implements inventory.ProfileRepo.
func (_d ProfileRepoWithTransactionEnforcer) GetByID(ctx context.Context, id int) (profile inventory.Profile, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		profile, err = _d._base.GetByID(ctx, id)
		return err
	})

	return profile, err
}

// UpdateByID implements inventory.ProfileRepo.
func (_d ProfileRepoWithTransactionEnforcer) UpdateByID(ctx context.Context, profile inventory.Profile) (profile1 inventory.Profile, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		profile1, err = _d._base.UpdateByID(ctx, profile)
		return err
	})

	return profile1, err
}
