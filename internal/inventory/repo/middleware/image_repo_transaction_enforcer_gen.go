// Code generated by mockery. DO NOT EDIT.
// template: github.com/FuturFusion/operations-center/internal/transaction/transaction_enforcer.gotmpl

package middleware

import (
	"context"

	"github.com/FuturFusion/operations-center/internal/inventory"
	"github.com/FuturFusion/operations-center/internal/transaction"
)

// ImageRepoWithTransactionEnforcer implements inventory.ImageRepo that enforces a transaction.
type ImageRepoWithTransactionEnforcer struct {
	_base inventory.ImageRepo
}

// NewImageRepoWithTransactionEnforcer instruments an implementation of the inventory.ImageRepo with simple logging.
func NewImageRepoWithTransactionEnforcer(base inventory.ImageRepo) ImageRepoWithTransactionEnforcer {
	return ImageRepoWithTransactionEnforcer{
		_base: base,
	}
}

// Create implements inventory.ImageRepo.
func (_d ImageRepoWithTransactionEnforcer) Create(ctx context.Context, image inventory.Image) (image1 inventory.Image, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		image1, err = _d._base.Create(ctx, image)
		return err
	})

	return image1, err
}

// DeleteByClusterName implements inventory.ImageRepo.
func (_d ImageRepoWithTransactionEnforcer) DeleteByClusterName(ctx context.Context, cluster string) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByClusterName(ctx, cluster)
		return err
	})

	return err
}

// DeleteByID implements inventory.ImageRepo.
func (_d ImageRepoWithTransactionEnforcer) DeleteByID(ctx context.Context, id int) (err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		err = _d._base.DeleteByID(ctx, id)
		return err
	})

	return err
}

// GetAllIDsWithFilter implements inventory.ImageRepo.
func (_d ImageRepoWithTransactionEnforcer) GetAllIDsWithFilter(ctx context.Context, filter inventory.ImageFilter) (ints []int, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		ints, err = _d._base.GetAllIDsWithFilter(ctx, filter)
		return err
	})

	return ints, err
}

// GetByID implements inventory.ImageRepo.
func (_d ImageRepoWithTransactionEnforcer) GetByID(ctx context.Context, id int) (image inventory.Image, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		image, err = _d._base.GetByID(ctx, id)
		return err
	})

	return image, err
}

// UpdateByID implements inventory.ImageRepo.
func (_d ImageRepoWithTransactionEnforcer) UpdateByID(ctx context.Context, image inventory.Image) (image1 inventory.Image, err error) {

	err = transaction.Do(ctx, func(ctx context.Context) error {
		image1, err = _d._base.UpdateByID(ctx, image)
		return err
	})

	return image1, err
}
