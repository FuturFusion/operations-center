// Code generated by generate-inventory; DO NOT EDIT.

package inventory

import (
	"context"

	incusapi "github.com/lxc/incus/v6/shared/api"
)

//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i InstanceService -t ../logger/slog.gotmpl -o ./middleware/instance_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i InstanceService -t prometheus -o ./middleware/instance_prometheus_gen.go

type InstanceService interface {
	GetAllIDsWithFilter(ctx context.Context, filter InstanceFilter) ([]int, error)
	GetByID(ctx context.Context, id int) (Instance, error)
	ResyncByID(ctx context.Context, id int) error
	SyncCluster(ctx context.Context, clusterID int) error
	SyncServer(ctx context.Context, serverID int) error
}

//go:generate go run github.com/matryer/moq -fmt goimports -pkg mock -out ./repo/mock/instance_repo_mock_gen.go -rm . InstanceRepo
//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i InstanceRepo -t ../logger/slog.gotmpl -o ./repo/middleware/instance_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i InstanceRepo -t prometheus -o ./repo/middleware/instance_prometheus_gen.go

type InstanceRepo interface {
	GetAllIDsWithFilter(ctx context.Context, filter InstanceFilter) ([]int, error)
	GetByID(ctx context.Context, id int) (Instance, error)
	Create(ctx context.Context, instance Instance) (Instance, error)
	DeleteByID(ctx context.Context, id int) error
	DeleteByServerID(ctx context.Context, serverID int) error
	UpdateByID(ctx context.Context, instance Instance) (Instance, error)
}

//go:generate go run github.com/matryer/moq -fmt goimports -pkg mock -out ./server/mock/instance_server_client_mock_gen.go -rm . InstanceServerClient
//go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i InstanceServerClient -t ../logger/slog.gotmpl -o ./server/middleware/instance_slog_gen.go
// disabled go:generate go run github.com/hexdigest/gowrap/cmd/gowrap gen -g -i InstanceServerClient -t prometheus -o ./server/middleware/instance_prometheus_gen.go

type InstanceServerClient interface {
	GetInstances(ctx context.Context, connectionURL string) ([]incusapi.InstanceFull, error)
	GetInstanceByName(ctx context.Context, connectionURL string, instanceName string) (incusapi.InstanceFull, error)
}
