// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"sync"

	"github.com/FuturFusion/operations-center/internal/inventory"
	incusapi "github.com/lxc/incus/v6/shared/api"
)

// Ensure, that ImageServerClientMock does implement inventory.ImageServerClient.
// If this is not the case, regenerate this file with moq.
var _ inventory.ImageServerClient = &ImageServerClientMock{}

// ImageServerClientMock is a mock implementation of inventory.ImageServerClient.
//
//	func TestSomethingThatUsesImageServerClient(t *testing.T) {
//
//		// make and configure a mocked inventory.ImageServerClient
//		mockedImageServerClient := &ImageServerClientMock{
//			GetImagesFunc: func(ctx context.Context, connectionURL string) ([]incusapi.Image, error) {
//				panic("mock out the GetImages method")
//			},
//		}
//
//		// use mockedImageServerClient in code that requires inventory.ImageServerClient
//		// and then make assertions.
//
//	}
type ImageServerClientMock struct {
	// GetImagesFunc mocks the GetImages method.
	GetImagesFunc func(ctx context.Context, connectionURL string) ([]incusapi.Image, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetImages holds details about calls to the GetImages method.
		GetImages []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ConnectionURL is the connectionURL argument value.
			ConnectionURL string
		}
	}
	lockGetImages sync.RWMutex
}

// GetImages calls GetImagesFunc.
func (mock *ImageServerClientMock) GetImages(ctx context.Context, connectionURL string) ([]incusapi.Image, error) {
	if mock.GetImagesFunc == nil {
		panic("ImageServerClientMock.GetImagesFunc: method is nil but ImageServerClient.GetImages was just called")
	}
	callInfo := struct {
		Ctx           context.Context
		ConnectionURL string
	}{
		Ctx:           ctx,
		ConnectionURL: connectionURL,
	}
	mock.lockGetImages.Lock()
	mock.calls.GetImages = append(mock.calls.GetImages, callInfo)
	mock.lockGetImages.Unlock()
	return mock.GetImagesFunc(ctx, connectionURL)
}

// GetImagesCalls gets all the calls that were made to GetImages.
// Check the length with:
//
//	len(mockedImageServerClient.GetImagesCalls())
func (mock *ImageServerClientMock) GetImagesCalls() []struct {
	Ctx           context.Context
	ConnectionURL string
} {
	var calls []struct {
		Ctx           context.Context
		ConnectionURL string
	}
	mock.lockGetImages.RLock()
	calls = mock.calls.GetImages
	mock.lockGetImages.RUnlock()
	return calls
}
