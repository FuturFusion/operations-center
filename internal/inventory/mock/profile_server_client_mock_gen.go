// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"context"
	"sync"

	"github.com/FuturFusion/operations-center/internal/inventory"
	incusapi "github.com/lxc/incus/v6/shared/api"
)

// Ensure, that ProfileServerClientMock does implement inventory.ProfileServerClient.
// If this is not the case, regenerate this file with moq.
var _ inventory.ProfileServerClient = &ProfileServerClientMock{}

// ProfileServerClientMock is a mock implementation of inventory.ProfileServerClient.
//
//	func TestSomethingThatUsesProfileServerClient(t *testing.T) {
//
//		// make and configure a mocked inventory.ProfileServerClient
//		mockedProfileServerClient := &ProfileServerClientMock{
//			GetProfilesFunc: func(ctx context.Context, connectionURL string) ([]incusapi.Profile, error) {
//				panic("mock out the GetProfiles method")
//			},
//		}
//
//		// use mockedProfileServerClient in code that requires inventory.ProfileServerClient
//		// and then make assertions.
//
//	}
type ProfileServerClientMock struct {
	// GetProfilesFunc mocks the GetProfiles method.
	GetProfilesFunc func(ctx context.Context, connectionURL string) ([]incusapi.Profile, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetProfiles holds details about calls to the GetProfiles method.
		GetProfiles []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ConnectionURL is the connectionURL argument value.
			ConnectionURL string
		}
	}
	lockGetProfiles sync.RWMutex
}

// GetProfiles calls GetProfilesFunc.
func (mock *ProfileServerClientMock) GetProfiles(ctx context.Context, connectionURL string) ([]incusapi.Profile, error) {
	if mock.GetProfilesFunc == nil {
		panic("ProfileServerClientMock.GetProfilesFunc: method is nil but ProfileServerClient.GetProfiles was just called")
	}
	callInfo := struct {
		Ctx           context.Context
		ConnectionURL string
	}{
		Ctx:           ctx,
		ConnectionURL: connectionURL,
	}
	mock.lockGetProfiles.Lock()
	mock.calls.GetProfiles = append(mock.calls.GetProfiles, callInfo)
	mock.lockGetProfiles.Unlock()
	return mock.GetProfilesFunc(ctx, connectionURL)
}

// GetProfilesCalls gets all the calls that were made to GetProfiles.
// Check the length with:
//
//	len(mockedProfileServerClient.GetProfilesCalls())
func (mock *ProfileServerClientMock) GetProfilesCalls() []struct {
	Ctx           context.Context
	ConnectionURL string
} {
	var calls []struct {
		Ctx           context.Context
		ConnectionURL string
	}
	mock.lockGetProfiles.RLock()
	calls = mock.calls.GetProfiles
	mock.lockGetProfiles.RUnlock()
	return calls
}
