//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Tokens = newTokensTable("", "tokens", "")

type tokensTable struct {
	sqlite.Table

	// Columns
	UUID          sqlite.ColumnString
	UsesRemaining sqlite.ColumnInteger
	ExpireAt      sqlite.ColumnString
	Description   sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type TokensTable struct {
	tokensTable

	EXCLUDED tokensTable
}

// AS creates new TokensTable with assigned alias
func (a TokensTable) AS(alias string) *TokensTable {
	return newTokensTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TokensTable with assigned schema name
func (a TokensTable) FromSchema(schemaName string) *TokensTable {
	return newTokensTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TokensTable with assigned table prefix
func (a TokensTable) WithPrefix(prefix string) *TokensTable {
	return newTokensTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TokensTable with assigned table suffix
func (a TokensTable) WithSuffix(suffix string) *TokensTable {
	return newTokensTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTokensTable(schemaName, tableName, alias string) *TokensTable {
	return &TokensTable{
		tokensTable: newTokensTableImpl(schemaName, tableName, alias),
		EXCLUDED:    newTokensTableImpl("", "excluded", ""),
	}
}

func newTokensTableImpl(schemaName, tableName, alias string) tokensTable {
	var (
		UUIDColumn          = sqlite.StringColumn("uuid")
		UsesRemainingColumn = sqlite.IntegerColumn("uses_remaining")
		ExpireAtColumn      = sqlite.StringColumn("expire_at")
		DescriptionColumn   = sqlite.StringColumn("description")
		allColumns          = sqlite.ColumnList{UUIDColumn, UsesRemainingColumn, ExpireAtColumn, DescriptionColumn}
		mutableColumns      = sqlite.ColumnList{UsesRemainingColumn, ExpireAtColumn, DescriptionColumn}
	)

	return tokensTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UUID:          UUIDColumn,
		UsesRemaining: UsesRemainingColumn,
		ExpireAt:      ExpireAtColumn,
		Description:   DescriptionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
